
import os
import json
import asyncio
import websockets
from flask import Flask

TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN")
CHAT_ID = os.environ.get("TELEGRAM_USER_ID")

app = Flask(__name__)

@app.route("/")
def home():
    return "üì° Flask —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω. –ñ–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è..."

async def connect_to_binance():
    url = "wss://stream.binance.com:9443/ws/btcusdt@depth"
    async with websockets.connect(url) as ws:
        print("‚úÖ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω")
        while True:
            try:
                data = await ws.recv()
                print("üì• –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç Binance")
                json_data = json.loads(data)
                bids = json_data.get("b", [])
                asks = json_data.get("a", [])
                if not bids or not asks:
                    print("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö bid/ask")
                else:
                    print("‚úÖ –î–∞–Ω–Ω—ã–µ bids/asks –ø–æ–ª—É—á–µ–Ω—ã")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
                await asyncio.sleep(2)

if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    loop.create_task(connect_to_binance())
    app.run(host="0.0.0.0", port=8000)
